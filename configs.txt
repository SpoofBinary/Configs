{{{{{{{{{BSPWM Config}}}}}}}}}
#! /bin/sh

pgrep -x sxhkd > /dev/null || sxhkd &

bspc monitor -d I II III IV V VI VII VIII IX X

bspc config border_width         2
bspc config window_gap          12

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true

bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off

bspc config normal_border_color "44475a"
bspc config active_border_color "bd93f9"
bspc config focused_border_color "#7c31ed"
bspc config presel_feedback_color "6272a4"

bash ~/.config/polybar/launch.sh --shapes









{{{{{{{{{SXHKD Config}}}}}}}}}
#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty

# program launcher
super + @space
	rofi -i -show drun -modi drun -show-icons

# firefox
# super + f
#	Firefox
#
# File manager
# super + o
#	Thunar

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit/restart bspwm
super + alt + {q,r}
	bspc {quit,wm -r}

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {-,=}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + shift + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + ctrl + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {h,j,k,l}
	bspc node -v {-20 0,0 20,0 -20,20 0}









{{{{{{{{{Rofi Config}}}}}}}}}
/** Basic config file **/

configuration {
  show-icons:         true;
  icon-theme:         "Papirus";
}
@import "/usr/share/rofi/themes/blurry_full.rasi"










{{{{{{{{{Polybar Config}}}}}}}}}
;===========================================
;
;   SpoofBinary's Custom Polybar Config
;     https://github.com/SpoofBinary
;   
;===========================================

[colors]
background = #1E1E1E
background-wm = #1E1E1E
; background-alt should be same color as background-wm
background-alt = #1E1E1E
foreground = #9954FF
forefround-alt = #6D3CB7
primary = #6F10CC
secondary = #5460ff
alert = #FF0000

[settings]
format-foreground = ${colors.primary}
format-underline = ${colors.foreground}
format-background = ${colors.background-alt}
format-padding = 1
format-overline = 
format-margin = 0
format-offset = 
screenchange-reload = true

[global/wm]
margin-top = 0
margin-bottom = 0

[bar/ricebar]
monitor = ${env:MONITOR:eDP-1}
monitor-fallback = 
monitor-strict = false
monitor-exact = true
;override-redirect = true
wm-resstack = bspwm
enable-ipc = true
fixed-center = false
bottom = false
separator = 
;dim-value = 1.0

width = 100%
height = 32
offset-x = 0
offset-y = 0
radius = 0.0

;background-0 = ${colors.primary}
;background-1 = ${colors.secondary}
;background-2 = ${colors.alert}
background = ${colors.background}
foreground = ${colors.foreground}

line-size = 3
line-color = #000000

border-size = 4
; Default Color is transparent = #00000000
border-color = #00000000

padding = 0
module-margin-left = 0
module-margin-right = 0

font-0 = SourceCodeProMedium:pixelsize=10;
font-1 = HackNerdFont:pixelsize=10;
font-2 = NotoColorEmoji:fontformat=truetype:scale=10:antialias=false;
font-3 = Weather Icons:size=12;1
;dpi-y = 96
;dpi-x = 96

modules-left = bspwm xwindow
;modules-center = 
modules-right = pulseaudio network battery timedate weather

tray-position = right 
tray-padding = 1
tray-background = ${colors.backgorund-alt}
tray-offset-x = 0
tray-offset-y = 0
tray-scale = 1.0

cursor-click = arrow
cursor-scroll = ew-resize



[module/bspwm]
type = internal/bspwm

label-focused = %name%
label-focused-foreground = ${colors.primary}
label-focused-background = ${colors.background-wm}
label-focused-underline = ${colors.foreground}
label-focused-padding = ${settings.format-padding}

label-occupied = %name%
label-occupied-foreground = ${colors.primary}
label-occupied-background = ${colors.background-wm}
label-occupied-padding = ${settings.format-padding}

label-urgent = %name%
label-urgent-foreground = ${colors.alert}
label-urgent-background = ${colors.background-wm}
label-urgent-padding = ${settings.format-padding}

label-empty = %name%
label-empty-foreground = ${colors.foreground-alt}
label-empty-background = ${colors.background-wm}
label-empty-padding = ${settings.format-padding}

format-underline = 
format-background = 
format-padding = 

label-separator = |



[module/xwindow]
type = internal/xwindow
label = %title%
label-maxlen = 100
format = <label>
format-underline = ${settings.format-background}
format-background = ${settings.format-foreground}
format-foreground = ${settings.format-background}
format-padding = ${settings.format-padding}



[module/battery]
type = custom/script
exec = ~/scripts/battery.sh
interval = 1

format-foreground = ${settings.format-foreground}
format-background = ${settings.format-background}
format-underline = ${settings.format-underline}
format-padding = ${settings.format-padding}



[module/network]
type = internal/network
interface = wlan0
interval = 1

format-connected = <label-connected>
format-connected-prefix = "üì∂ "
format-connected-background = ${settings.format-background}
label-connected = %essid%
label-connected-foreground = ${settings.format-foreground}

format-disconnected = <label-disconnected>
format-disconnected-prefix = "üì∂ "
format-disconnected-background = ${settings.format-background}
label-disconnected = not connected
label-disconnected-foreground = ${settings.format-foreground}

format-padding = ${settings.format-padding}
format-background = ${settings.format-background}
format-foreground = ${settings.format-foreground}
format-underline = ${settings.format-underline}



[module/pulseaudio]
type = internal/pulseaudio
interval = 1

format-volume = <ramp-volume> <label-volume>
format-muted = <label-muted>

label-volume = %percentage%
label-volume-foreground = ${settings.format-foreground}

label-muted = üîá muted
label-muted-foreground = ${settings.format-foreground}

ramp-volume-0 = üîà
ramp-volume-1 = üîâ
ramp-volume-2 = üîä

format-foreground = ${settings.format-foreground}
format-background = ${settings.format-background}
format-underline = ${settings.format-underline}
format-padding = ${settings.format-padding}



[module/timedate]
type = custom/script
exec = date '+%m|%d|%Y %H:%M'
interval = 60

format-prefix = "‚è≥ "
format-underline = ${settings.format-underline}
format-foreground = ${settings.format-foreground}
format-background = ${settings.format-background}
format-padding = ${settings.format-padding}



[module/weather]
type = custom/script
exec = ~/scripts/weather.sh
interval = 600

label-font = 4
format-foreground = ${settings.format-foreground}
format-background = ${settings.format-background}
format-underline = ${settings.format-underline}
format-padding = ${settings.format-padding}










{{{{{{{{{NeoVIM Config}}}}}}}}}
" Vim color file
" ricecake
" Created by SpoofBinary with ThemeCreator (https://github.com/mswift42/themecreator)

hi clear

if exists("syntax on")
syntax reset
endif

set t_Co=256
let g:colors_name = "ricecake"


" Define reusable colorvariables.
let s:bg="#2e2c2c"
let s:fg="#8c00ff"
let s:fg2="#8100eb"
let s:fg3="#7600d6"
let s:fg4="#6a00c2"
let s:bg2="#3f3d3d"
let s:bg3="#4f4e4e"
let s:bg4="#605f5f"
let s:keyword="#a300ff"
let s:builtin="#cd71ff"
let s:const= "#e94ceb"
let s:comment="#720090"
let s:func="#cd71ff"
let s:str="#ffffff"
let s:type="#e94ceb"
let s:var="#c400ff"
let s:warning="#ff00ac"
let s:warning2="#ff00ac"

exe 'hi Normal guifg='s:fg' guibg='s:bg
exe 'hi Cursor guifg='s:bg' guibg='s:fg
exe 'hi CursorLine  guibg='s:bg2
exe 'hi CursorLineNr guifg='s:str' guibg='s:bg
exe 'hi CursorColumn  guibg='s:bg2
exe 'hi ColorColumn  guibg='s:bg2
exe 'hi LineNr guifg='s:fg2' guibg='s:bg2
exe 'hi VertSplit guifg='s:fg3' guibg='s:bg3
exe 'hi MatchParen guifg='s:warning2'  gui=underline'
exe 'hi StatusLine guifg='s:fg2' guibg='s:bg3' gui=bold'
exe 'hi Pmenu guifg='s:fg' guibg='s:bg2
exe 'hi PmenuSel  guibg='s:bg3
exe 'hi IncSearch guifg='s:bg' guibg='s:keyword
exe 'hi Search   gui=underline'
exe 'hi Directory guifg='s:const
exe 'hi Folded guifg='s:fg4' guibg='s:bg
exe 'hi WildMenu guifg='s:str' guibg='s:bg

exe 'hi Boolean guifg='s:const
exe 'hi Character guifg='s:const
exe 'hi Comment guifg='s:comment
exe 'hi Conditional guifg='s:keyword
exe 'hi Constant guifg='s:const
exe 'hi Todo guibg='s:bg
exe 'hi Define guifg='s:keyword
exe 'hi DiffAdd guifg=#fafafa guibg=#123d0f gui=bold'
exe 'hi DiffDelete guibg='s:bg2
exe 'hi DiffChange  guibg=#151b3c guifg=#fafafa'
exe 'hi DiffText guifg=#ffffff guibg=#ff0000 gui=bold'
exe 'hi ErrorMsg guifg='s:warning' guibg='s:bg2' gui=bold'
exe 'hi WarningMsg guifg='s:fg' guibg='s:warning2
exe 'hi Float guifg='s:const
exe 'hi Function guifg='s:func
exe 'hi Identifier guifg='s:type'  gui=italic'
exe 'hi Keyword guifg='s:keyword'  gui=bold'
exe 'hi Label guifg='s:var
exe 'hi NonText guifg='s:bg4' guibg='s:bg2
exe 'hi Number guifg='s:const
exe 'hi Operator guifg='s:keyword
exe 'hi PreProc guifg='s:keyword
exe 'hi Special guifg='s:fg
exe 'hi SpecialKey guifg='s:fg2' guibg='s:bg2
exe 'hi Statement guifg='s:keyword
exe 'hi StorageClass guifg='s:type'  gui=italic'
exe 'hi String guifg='s:str
exe 'hi Tag guifg='s:keyword
exe 'hi Title guifg='s:fg'  gui=bold'
exe 'hi Todo guifg='s:fg2'  gui=inverse,bold'
exe 'hi Type guifg='s:type
exe 'hi Underlined   gui=underline'

" Neovim Terminal Mode
let g:terminal_color_0 = s:bg
let g:terminal_color_1 = s:warning
let g:terminal_color_2 = s:keyword
let g:terminal_color_3 = s:bg4
let g:terminal_color_4 = s:func
let g:terminal_color_5 = s:builtin
let g:terminal_color_6 = s:fg3
let g:terminal_color_7 = s:str
let g:terminal_color_8 = s:bg2
let g:terminal_color_9 = s:warning2
let g:terminal_color_10 = s:fg2
let g:terminal_color_11 = s:var
let g:terminal_color_12 = s:type
let g:terminal_color_13 = s:const
let g:terminal_color_14 = s:fg4
let g:terminal_color_15 = s:comment

" Ruby Highlighting
exe 'hi rubyAttribute guifg='s:builtin
exe 'hi rubyLocalVariableOrMethod guifg='s:var
exe 'hi rubyGlobalVariable guifg='s:var' gui=italic'
exe 'hi rubyInstanceVariable guifg='s:var
exe 'hi rubyKeyword guifg='s:keyword
exe 'hi rubyKeywordAsMethod guifg='s:keyword' gui=bold'
exe 'hi rubyClassDeclaration guifg='s:keyword' gui=bold'
exe 'hi rubyClass guifg='s:keyword' gui=bold'
exe 'hi rubyNumber guifg='s:const

" Python Highlighting
exe 'hi pythonBuiltinFunc guifg='s:builtin

" Go Highlighting
exe 'hi goBuiltins guifg='s:builtin
let g:go_highlight_array_whitespace_error = 1
let g:go_highlight_build_constraints      = 1
let g:go_highlight_chan_whitespace_error  = 1
let g:go_highlight_extra_types            = 1
let g:go_highlight_fields                 = 1
let g:go_highlight_format_strings         = 1
let g:go_highlight_function_calls         = 1
let g:go_highlight_function_parameters    = 1
let g:go_highlight_functions              = 1
let g:go_highlight_generate_tags          = 1
let g:go_highlight_operators              = 1
let g:go_highlight_space_tab_error        = 1
let g:go_highlight_string_spellcheck      = 1
let g:go_highlight_types                  = 1
let g:go_highlight_variable_assignments   = 1
let g:go_highlight_variable_declarations  = 1

" Javascript Highlighting
exe 'hi jsBuiltins guifg='s:builtin
exe 'hi jsFunction guifg='s:keyword' gui=bold'
exe 'hi jsGlobalObjects guifg='s:type
exe 'hi jsAssignmentExps guifg='s:var

" Html Highlighting
exe 'hi htmlLink guifg='s:var' gui=underline'
exe 'hi htmlStatement guifg='s:keyword
exe 'hi htmlSpecialTagName guifg='s:keyword

" Markdown Highlighting
exe 'hi mkdCode guifg='s:builtin


